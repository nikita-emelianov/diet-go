org: nikitaemelian
app: diet-go
service: diet-go

package:
  individually: true
  exclude:
    - ./**

provider:
  name: aws
  runtime: provided.al2023
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
  stage: prod
  region: eu-central-1
  architecture: arm64
  httpApi:
    cors: true

functions:
  create:
    handler: handler.create
    package:
      artifact: ./output/handlers/create.zip
    events:
      - httpApi:
          method: POST
          path: /custom

  list:
    handler: handler.list
    package:
      artifact: ./output/handlers/list.zip
    events:
      - httpApi:
          method: GET
          path: /custom

  get:
    handler: handler.get
    package:
      artifact: ./output/handlers/get.zip
    events:
      - httpApi:
          method: GET
          path: /custom/{id}

  update:
    handler: handler.update
    package:
      artifact: ./output/handlers/update.zip
    events:
      - httpApi:
          method: PUT
          path: /custom/{id}

  delete:
    handler: handler.delete
    package:
      artifact: ./output/handlers/delete.zip
    events:
      - httpApi:
          method: DELETE
          path: /custom/{id}

resources:
  Resources:
    CustomDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
